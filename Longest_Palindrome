//Longest Palindromic Substring
//Find the longest substring of s that is a palindrome.
//Example:
//Input: "babad" ? Output: "bab" or "aba"
#include <iostream>
#include <string>
using namespace std;

// Helper function to expand around center
string expandAroundCenter(string s, int left, int right) {
    while (left >= 0 && right < s.size() && s[left] == s[right]) {
        left--;
        right++;
    }
    return s.substr(left + 1, right - left - 1);
}

string longestPalindrome(string s) {
    if (s.size() < 2) return s;

    string longest = s.substr(0, 1);

    for (int i = 0; i < s.size(); i++) {
        // Odd length palindrome
        string p1 = expandAroundCenter(s, i, i);
        if (p1.size() > longest.size()) longest = p1;

        // Even length palindrome
        string p2 = expandAroundCenter(s, i, i + 1);
        if (p2.size() > longest.size()) longest = p2;
    }

    return longest;
}

int main() {
    string s;
    cout<<"Enter the string to check for the longest palindrome:\n";
    cin >> s;   // input string

    cout << longestPalindrome(s) << endl;

    return 0;
}
